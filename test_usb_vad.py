#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è VAD –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ USB –ë–ï–ó PyAudio
"""

import usb.core
import usb.util
import struct
import time

VENDOR_ID = 0x2886
PRODUCT_ID = 0x0018
TIMEOUT = 100000

# –ù–∞–π—Ç–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
dev = usb.core.find(idVendor=VENDOR_ID, idProduct=PRODUCT_ID)
if dev is None:
    print("‚ùå ReSpeaker –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    exit(1)

print(f"‚úì –ù–∞–π–¥–µ–Ω–æ: {dev}")

# Reset
try:
    dev.reset()
    print("‚úì USB reset –≤—ã–ø–æ–ª–Ω–µ–Ω")
except usb.core.USBError as e:
    print(f"‚ö† USB reset warning: {e}")

time.sleep(5)
print("‚úì –ü–æ—Å–ª–µ sleep(5)")

# VOICEACTIVITY = (19, 32, 'int', 1, 0, 'ro')
param_id = 19
offset = 32
cmd = 0x80 | offset | 0x40  # int type
length = 8

print("\nüéôÔ∏è –ß–∏—Ç–∞—é VAD –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)...")
print("="*50)

try:
    while True:
        try:
            response = dev.ctrl_transfer(
                usb.util.CTRL_IN | usb.util.CTRL_TYPE_VENDOR | usb.util.CTRL_RECIPIENT_DEVICE,
                0, cmd, param_id, length, TIMEOUT)
            
            data = struct.unpack(b'ii', response.tobytes())
            vad = data[0]
            
            if vad:
                print(f"üéôÔ∏è VAD: {vad} - SPEECH DETECTED!")
            else:
                print(f"   VAD: {vad} - silence")
                
        except usb.core.USBError as e:
            print(f"‚ùå USB Error: {e}")
            break
            
        time.sleep(1)
        
except KeyboardInterrupt:
    print("\n‚úì Stopped")
