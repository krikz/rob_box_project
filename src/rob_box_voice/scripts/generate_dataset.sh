#!/bin/bash
# üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞—Ç–∞—Å–µ—Ç–∞ –¥–ª—è TTS –æ–±—É—á–µ–Ω–∏—è

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

echo "=========================================="
echo "ROBBOX TTS - Dataset Generation Workflow"
echo "=========================================="
echo ""

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤
SECRETS_FILE="$SCRIPT_DIR/.env.secrets"

if [ ! -f "$SECRETS_FILE" ]; then
    echo "‚ùå –§–∞–π–ª —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $SECRETS_FILE"
    echo ""
    echo "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env.secrets —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º:"
    echo ""
    cat << 'EOF'
# Yandex Cloud API
export YANDEX_API_KEY="–≤–∞—à_–∫–ª—é—á"
export YANDEX_FOLDER_ID="–≤–∞—à_folder_id"

# DeepSeek API
export DEEPSEEK_API_KEY="sk-–≤–∞—à_–∫–ª—é—á"
EOF
    echo ""
    exit 1
fi

echo "‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤ –∏–∑ .env.secrets"
source "$SECRETS_FILE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–π
if [ -z "$DEEPSEEK_API_KEY" ]; then
    echo "‚ùå DEEPSEEK_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

if [ -z "$YANDEX_API_KEY" ] || [ -z "$YANDEX_FOLDER_ID" ]; then
    echo "‚ùå YANDEX_API_KEY –∏–ª–∏ YANDEX_FOLDER_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    exit 1
fi

echo "‚úÖ –í—Å–µ –∫–ª—é—á–∏ –Ω–∞–π–¥–µ–Ω—ã"
echo ""

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
NUM_QUESTIONS=${1:-200}
OUTPUT_DIR="$SCRIPT_DIR/../dataset"
DATASET_NAME="robbox_voice_$(date +%Y%m%d_%H%M%S)"

echo "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:"
echo "  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤: $NUM_QUESTIONS"
echo "  –î–∞—Ç–∞—Å–µ—Ç: $DATASET_NAME"
echo ""

# –®–∞–≥ 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ—Ä–∞–∑ —á–µ—Ä–µ–∑ DeepSeek
echo "=========================================="
echo "[1/3] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ—Ä–∞–∑ —á–µ—Ä–µ–∑ DeepSeek"
echo "=========================================="
echo ""

SENTENCES_FILE="$OUTPUT_DIR/${DATASET_NAME}_sentences.txt"
QA_FILE="$OUTPUT_DIR/${DATASET_NAME}_qa.json"

python3 generate_phrases_deepseek.py \
    --master-prompt ../prompts/master_prompt.txt \
    --output "$SENTENCES_FILE" \
    --num-questions "$NUM_QUESTIONS" \
    --save-qa "$QA_FILE" \
    --delay 1.0

if [ $? -ne 0 ]; then
    echo ""
    echo "‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ—Ä–∞–∑"
    exit 1
fi

echo ""
echo "‚úÖ –§—Ä–∞–∑—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã: $SENTENCES_FILE"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
SENTENCE_COUNT=$(wc -l < "$SENTENCES_FILE")
echo "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "  –§—Ä–∞–∑: $SENTENCE_COUNT"
echo ""

# –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
echo "–ü—Ä–∏–º–µ—Ä—ã —Ñ—Ä–∞–∑:"
head -10 "$SENTENCES_FILE" | nl
echo "..."
echo ""

read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞ —á–µ—Ä–µ–∑ Yandex TTS? (y/n) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    echo "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
    echo "  python3 record_yandex_voice.py --input $SENTENCES_FILE --output ~/robbox_tts_training/datasets/$DATASET_NAME/"
    exit 0
fi

# –®–∞–≥ 2: –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞ —á–µ—Ä–µ–∑ Yandex TTS
echo ""
echo "=========================================="
echo "[2/3] –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞ —á–µ—Ä–µ–∑ Yandex TTS"
echo "=========================================="
echo ""

VOICE_DATASET_DIR="$HOME/robbox_tts_training/datasets/$DATASET_NAME"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ TTS (—Ç–æ—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –≤–∞—à–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞)
echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Yandex TTS v3:"
echo "  Voice: anton (—Ç–æ–ª—å–∫–æ v3!)"
echo "  Speed: 0.4 (–º–µ–¥–ª–µ–Ω–Ω–∞—è —á—ë—Ç–∫–∞—è —Ä–µ—á—å)"
echo ""

python3 record_yandex_voice.py \
    --input "$SENTENCES_FILE" \
    --output "$VOICE_DATASET_DIR" \
    --voice anton \
    --speed 0.4 \
    --delay 1.5

if [ $? -ne 0 ]; then
    echo ""
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞"
    exit 1
fi

echo ""
echo "‚úÖ –ì–æ–ª–æ—Å –∑–∞–ø–∏—Å–∞–Ω: $VOICE_DATASET_DIR"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∞—Ç–∞—Å–µ—Ç–∞
if [ -f "$VOICE_DATASET_DIR/metadata.csv" ]; then
    AUDIO_COUNT=$(wc -l < "$VOICE_DATASET_DIR/metadata.csv")
    echo "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞:"
    echo "  WAV —Ñ–∞–π–ª–æ–≤: $AUDIO_COUNT"
    
    # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–µ—Å–ª–∏ –µ—Å—Ç—å pandas)
    python3 << EOF 2>/dev/null || true
import pandas as pd
try:
    df = pd.read_csv('$VOICE_DATASET_DIR/metadata.csv', sep='|', names=['filename', 'text', 'duration'])
    total_duration = df['duration'].sum()
    print(f"  –û–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {total_duration/60:.1f} –º–∏–Ω—É—Ç")
    
    if total_duration < 600:
        print("  –ü–æ–¥—Ö–æ–¥: Voice cloning (fast, quality 3-4/5)")
    elif total_duration < 1800:
        print("  –ü–æ–¥—Ö–æ–¥: Fine-tuning (balanced, quality 4/5) ‚≠ê")
    else:
        print("  –ü–æ–¥—Ö–æ–¥: Full training (slow, quality 4-5/5)")
except:
    pass
EOF
fi

echo ""

# –®–∞–≥ 3: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–∞—Ö
echo "=========================================="
echo "[3/3] –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏"
echo "=========================================="
echo ""

echo "‚úÖ –î–∞—Ç–∞—Å–µ—Ç –≥–æ—Ç–æ–≤ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è!"
echo ""
echo "–î–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo ""
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏—Å—Ç–µ–º—É (–Ω–∞ Dell Precision):"
echo "   cd ../training"
echo "   python3 check_system.py"
echo ""
echo "2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ):"
echo "   ./setup_training_env.sh"
echo ""
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ:"
echo "   source ~/robbox_tts_training/activate.sh"
echo "   python3 train_piper.py \\"
echo "     --dataset $VOICE_DATASET_DIR \\"
echo "     --output ~/robbox_tts_training/models/$DATASET_NAME"
echo ""
echo "4. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–±—É—á–µ–Ω–∏—è:"
echo "   tensorboard --logdir ~/robbox_tts_training/models/$DATASET_NAME/logs"
echo "   watch -n 1 nvidia-smi"
echo ""

echo "=========================================="
echo "‚úÖ Workflow –∑–∞–≤–µ—Ä—à—ë–Ω!"
echo "=========================================="
