#!/usr/bin/env python3
"""
Словарь ударений для русского языка

Формат: слово (в нижнем регистре) → слово с ударением (знак + перед ударной гласной)

Источники:
- Викисловарь (ru.wiktionary.org)
- Частотные словари
- Грамота.ру
"""

# Омографы (КРИТИЧНО - одно написание, разное произношение)
HOMOGRAPHS = {
    # замок
    'замок': 'з+амок',      # Замόк - здание (по умолчанию)
    'замка': 'з+амка',
    'замком': 'з+амком',
    'замки': 'з+амки',
    
    # мука
    'мука': 'мук+а',        # Мукá - страдание (по умолчанию)
    'муки': 'м+уки',        # Мýки - продукт
    
    # белки
    'белки': 'б+елки',      # Бéлки - животные (по умолчанию)
    'белка': 'б+елка',
    'белок': 'бел+ок',      # Белóк - протеин
    
    # атлас
    'атлас': '+атлас',      # Áтлас - карты (по умолчанию)
    
    # стоит
    'стоит': 'сто+ит',      # Стоúт - находится (по умолчанию)
    
    # пропасть
    'пропасть': 'пр+опасть', # Прóпасть - обрыв (по умолчанию)
}

# Топонимы (города, страны, реки)
TOPONYMS = {
    'сочи': 'С+очи',
    'москва': 'Москв+а',
    'москве': 'Москв+е',
    'москвы': 'Москв+ы',
    'москву': 'Москв+у',
    'россия': 'Росс+ия',
    'россии': 'Росс+ии',
    'российский': 'росс+ийский',
    'петербург': 'Петерб+ург',
    'санкт-петербург': 'Санкт-Петерб+ург',
    'новосибирск': 'Новосиб+ирск',
    'екатеринбург': 'Екатеринб+ург',
    'казань': 'Каз+ань',
    'китай': 'Кит+ай',
    'япония': 'Яп+ония',
}

# Технические термины (для робототехники, IT, науки)
TECH_TERMS = {
    'робот': 'р+обот',
    'робота': 'р+обота',
    'роботу': 'р+оботу',
    'роботом': 'р+оботом',
    'система': 'сист+ема',
    'системы': 'сист+емы',
    'навигация': 'навиг+ация',
    'сенсор': 'с+енсор',
    'сенсора': 'с+енсора',
    'сенсоры': 'с+енсоры',
    'камера': 'к+амера',
    'камеры': 'к+амеры',
    'лидар': 'лид+ар',
    'лидара': 'лид+ара',
    'батарея': 'батар+ея',
    'батареи': 'батар+еи',
    'двигатель': 'дв+игатель',
    'двигателя': 'дв+игателя',
    'двигатели': 'дв+игатели',
    'скорость': 'ск+орость',
    'скорости': 'ск+орости',
    'препятствие': 'преп+ятствие',
    'препятствия': 'преп+ятствия',
    'траектория': 'траект+ория',
    'алгоритм': 'алгор+итм',
    'алгоритма': 'алгор+итма',
    'алгоритмы': 'алгор+итмы',
    'процессор': 'процесс+ор',
    'программа': 'прогр+амма',
    'программы': 'прогр+аммы',
    'данные': 'д+анные',
    'данных': 'д+анных',
}

# Частые слова (топ 200 по частотности)
COMMON_WORDS = {
    # Местоимения
    'я': 'я',
    'ты': 'ты',
    'он': 'он',
    'она': 'он+а',
    'мы': 'мы',
    'вы': 'вы',
    'они': 'он+и',
    
    # Глаголы (настоящее время)
    'есть': 'есть',
    'был': 'был',
    'была': 'был+а',
    'было': 'б+ыло',
    'были': 'б+ыли',
    'буду': 'б+уду',
    'будешь': 'б+удешь',
    'будет': 'б+удет',
    'будем': 'б+удем',
    'будут': 'б+удут',
    'делаю': 'д+елаю',
    'делает': 'д+елает',
    'знаю': 'зн+аю',
    'знает': 'зн+ает',
    'могу': 'мог+у',
    'можешь': 'м+ожешь',
    'может': 'м+ожет',
    'можем': 'м+ожем',
    'могут': 'м+огут',
    'хочу': 'хоч+у',
    'хочет': 'х+очет',
    'идет': 'ид+ет',
    'идут': 'ид+ут',
    'говорю': 'говор+ю',
    'говорит': 'гов+орит',
    
    # Существительные
    'время': 'вр+емя',
    'год': 'год',
    'года': 'г+ода',
    'лет': 'лет',
    'день': 'день',
    'дня': 'дня',
    'жизнь': 'жизнь',
    'дело': 'д+ело',
    'дела': 'дел+а',
    'работа': 'раб+ота',
    'работы': 'раб+оты',
    'место': 'м+есто',
    'места': 'мест+а',
    'рука': 'рук+а',
    'руки': 'р+уки',
    'слово': 'сл+ово',
    'слова': 'слов+а',
    'вопрос': 'вопр+ос',
    'вопроса': 'вопр+оса',
    'человек': 'челов+ек',
    'люди': 'л+юди',
    'ребенок': 'реб+енок',
    'дети': 'д+ети',
    'мир': 'мир',
    'мира': 'м+ира',
    'сторона': 'сторон+а',
    'стороны': 'стор+оны',
    'дом': 'дом',
    'дома': 'д+ома',
    'город': 'г+ород',
    'города': 'город+а',
    'страна': 'стран+а',
    'страны': 'стр+аны',
    
    # Прилагательные
    'большой': 'больш+ой',
    'большая': 'больш+ая',
    'большое': 'больш+ое',
    'большие': 'больш+ие',
    'маленький': 'м+аленький',
    'новый': 'н+овый',
    'новая': 'н+овая',
    'старый': 'ст+арый',
    'хороший': 'хор+оший',
    'плохой': 'плох+ой',
    'первый': 'п+ервый',
    'последний': 'посл+едний',
    'другой': 'друг+ой',
    'такой': 'так+ой',
    'весь': 'весь',
    'каждый': 'к+аждый',
    'общий': '+общий',
    
    # Наречия
    'очень': '+очень',
    'уже': 'уж+е',
    'еще': 'ещ+е',
    'также': 'т+акже',
    'здесь': 'здесь',
    'там': 'там',
    'где': 'где',
    'когда': 'когд+а',
    'потом': 'пот+ом',
    'сейчас': 'сейч+ас',
    'сегодня': 'сег+одня',
    'вчера': 'вчер+а',
    'завтра': 'з+автра',
    'всегда': 'всегд+а',
    'никогда': 'никогд+а',
    'только': 'т+олько',
    'даже': 'д+аже',
    'почти': 'почт+и',
    'совсем': 'совс+ем',
    'именно': 'им+енно',
    
    # Предлоги и союзы (обычно без ударения, но указываем для полноты)
    'и': 'и',
    'в': 'в',
    'на': 'на',
    'с': 'с',
    'к': 'к',
    'из': 'из',
    'у': 'у',
    'о': 'о',
    'по': 'по',
    'за': 'за',
    'от': 'от',
    'до': 'до',
    'при': 'при',
    'для': 'для',
    'без': 'без',
    'про': 'про',
    'что': 'что',
    'как': 'как',
    'если': '+если',
    'когда': 'когд+а',
    'чтобы': 'чт+обы',
    'потому': 'потом+у',
    'поэтому': 'по+этому',
}

# Объединённый словарь (порядок важен: сначала специфичные, потом общие)
ACCENT_DICT = {}
ACCENT_DICT.update(HOMOGRAPHS)      # Омографы - самый высокий приоритет
ACCENT_DICT.update(TOPONYMS)        # Топонимы
ACCENT_DICT.update(TECH_TERMS)      # Технические термины
ACCENT_DICT.update(COMMON_WORDS)    # Частые слова


def get_accented_word(word: str, context: dict = None) -> str:
    """
    Возвращает слово с ударением из словаря
    
    Args:
        word: Слово для поиска (любой регистр)
        context: Контекст для разрешения омографов (пока не используется)
        
    Returns:
        Слово с ударением или исходное слово если не найдено
    """
    word_lower = word.lower()
    
    if word_lower in ACCENT_DICT:
        accented = ACCENT_DICT[word_lower]
        
        # Восстанавливаем регистр (простой подход)
        if word[0].isupper():
            accented = accented[0].upper() + accented[1:] if len(accented) > 1 else accented.upper()
        
        return accented
    
    return word


def add_accents_to_text(text: str) -> str:
    """
    Расставляет ударения в тексте используя словарь
    
    Args:
        text: Входной текст
        
    Returns:
        Текст с ударениями где возможно
    """
    import re
    
    # Разбиваем на слова, сохраняя пунктуацию и пробелы
    tokens = re.findall(r'\w+|\s+|[^\w\s]', text)
    
    result = []
    for token in tokens:
        if token.strip() and token[0].isalpha():
            # Это слово - ищем в словаре
            accented = get_accented_word(token)
            result.append(accented)
        else:
            # Пунктуация или пробелы - оставляем как есть
            result.append(token)
    
    return ''.join(result)


def get_dictionary_stats():
    """Возвращает статистику по словарю"""
    return {
        'total_words': len(ACCENT_DICT),
        'homographs': len(HOMOGRAPHS),
        'toponyms': len(TOPONYMS),
        'tech_terms': len(TECH_TERMS),
        'common_words': len(COMMON_WORDS),
    }


if __name__ == "__main__":
    # Тестирование
    print("=" * 70)
    print("СЛОВАРЬ УДАРЕНИЙ")
    print("=" * 70)
    
    stats = get_dictionary_stats()
    print(f"\nСтатистика:")
    print(f"  Всего слов: {stats['total_words']}")
    print(f"  - Омографы: {stats['homographs']}")
    print(f"  - Топонимы: {stats['toponyms']}")
    print(f"  - Технические: {stats['tech_terms']}")
    print(f"  - Частые слова: {stats['common_words']}")
    
    print("\n" + "=" * 70)
    print("ПРИМЕРЫ")
    print("=" * 70)
    
    test_phrases = [
        "Город Сочи находится на побережье моря.",
        "Открываю замок на двери замка.",
        "Робот движется вперед со скоростью метр в секунду.",
        "Система навигации использует лидар и камеры.",
    ]
    
    for phrase in test_phrases:
        accented = add_accents_to_text(phrase)
        print(f"\nИсходный:   {phrase}")
        print(f"С ударениями: {accented}")
