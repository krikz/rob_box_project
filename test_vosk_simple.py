#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Vosk STT —Å ReSpeaker
"""

import sounddevice as sd
import json
from vosk import Model, KaldiRecognizer

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
SAMPLE_RATE = 16000
CHANNELS = 6  # ReSpeaker –∏–º–µ–µ—Ç 6 –∫–∞–Ω–∞–ª–æ–≤ (4 –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ + 2 playback reference)
DEVICE = 6  # ReSpeaker - hw:1,0
MODEL_PATH = "/models/vosk-model-small-ru-0.22"

print(f"üé§ –ó–∞–≥—Ä—É–∑–∫–∞ Vosk –º–æ–¥–µ–ª–∏ –∏–∑ {MODEL_PATH}...")
model = Model(MODEL_PATH)
rec = KaldiRecognizer(model, SAMPLE_RATE)

print(f"üéôÔ∏è –ó–∞–ø–∏—Å—å —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ {DEVICE} (ReSpeaker)")
print("–ì–æ–≤–æ—Ä–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å... (Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)")
print("-" * 50)

def audio_callback(indata, frames, time, status):
    """Callback –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ"""
    if status:
        print(f"‚ö†Ô∏è Status: {status}")
    
    # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –∫–∞–Ω–∞–ª (–º–∏–∫—Ä–æ—Ñ–æ–Ω 0) –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –º–æ–Ω–æ
    mono_audio = indata[:, 0]  # –ü–µ—Ä–≤—ã–π –∫–∞–Ω–∞–ª
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º float32 –≤ int16 –¥–ª—è Vosk
    audio_int16 = (mono_audio * 32767).astype('int16')
    audio_bytes = audio_int16.tobytes()
    
    if rec.AcceptWaveform(audio_bytes):
        # –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result = json.loads(rec.Result())
        text = result.get('text', '')
        if text:
            print(f"‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {text}")
    else:
        # –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        partial = json.loads(rec.PartialResult())
        text = partial.get('partial', '')
        if text:
            print(f"‚è≥ –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ: {text}", end='\r')

try:
    with sd.InputStream(
        samplerate=SAMPLE_RATE,
        blocksize=8000,  # 0.5 —Å–µ–∫—É–Ω–¥—ã
        device=DEVICE,
        channels=CHANNELS,
        callback=audio_callback
    ):
        print("‚úÖ –ó–∞–ø–∏—Å—å –∑–∞–ø—É—â–µ–Ω–∞!")
        sd.sleep(int(1e9))  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π sleep
        
except KeyboardInterrupt:
    print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü–æ–∫–∞–∂–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—É–¥–∏–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:")
    print(sd.query_devices())
