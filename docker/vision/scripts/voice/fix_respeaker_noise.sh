#!/bin/bash
#
# fix_respeaker_noise.sh - –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –±–µ–ª–æ–≥–æ —à—É–º–∞ ReSpeaker
#
# –ü—Ä–æ–±–ª–µ–º–∞: –ü–æ—Å–ª–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ —á–µ—Ä–µ–∑ ReSpeaker –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –±–µ–ª—ã–π —à—É–º
# –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ALSA mixer –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ playback channel
#
# Usage:
#   ./fix_respeaker_noise.sh        # –í—ã–ø–æ–ª–Ω–∏—Ç—å cleanup
#   ./fix_respeaker_noise.sh status # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ —É—Ä–æ–≤–Ω–∏
#

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# ReSpeaker card name (–º–æ–∂–µ—Ç –±—ã—Ç—å ArrayUAC10 –∏–ª–∏ card2)
CARD_NAME="ArrayUAC10"
CARD_NUM="2"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warn() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ ReSpeaker
check_respeaker() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ ReSpeaker..."
    
    if ! aplay -l | grep -q "ArrayUAC10"; then
        log_error "ReSpeaker (ArrayUAC10) –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        log_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—É–¥–∏–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:"
        aplay -l
        return 1
    fi
    
    log_success "ReSpeaker –Ω–∞–π–¥–µ–Ω: card $CARD_NUM (ArrayUAC10)"
    return 0
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ALSA mixer
show_status() {
    log_info "–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ALSA mixer –¥–ª—è ReSpeaker:"
    echo ""
    
    # Playback controls
    if amixer -c $CARD_NAME sget 'Playback' &>/dev/null; then
        echo "Playback channel:"
        amixer -c $CARD_NAME sget 'Playback' | grep -E "Limits|Mono|Front"
    else
        log_warn "Playback control –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo ""
    
    # Capture controls
    if amixer -c $CARD_NAME sget 'Capture' &>/dev/null; then
        echo "Capture channel:"
        amixer -c $CARD_NAME sget 'Capture' | grep -E "Limits|Mono|Front"
    else
        log_warn "Capture control –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo ""
}

# –í—ã–ø–æ–ª–Ω–∏—Ç—å noise cleanup
cleanup_noise() {
    log_info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ noise cleanup –¥–ª—è ReSpeaker..."
    
    # 1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Playback –≤ 0% (mute)
    log_info "–®–∞–≥ 1/3: Mute playback channel..."
    if amixer -c $CARD_NAME sset 'Playback' 0% &>/dev/null; then
        log_success "Playback muted"
    else
        log_warn "Playback control –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é"
    fi
    
    # 2. –ö–æ—Ä–æ—Ç–∫–∞—è –ø–∞—É–∑–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
    sleep 0.2
    
    # 3. Unmute playback channel (–≤–µ—Ä–Ω—É—Ç—å –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É —É—Ä–æ–≤–Ω—é)
    log_info "–®–∞–≥ 2/3: Unmute playback channel..."
    if amixer -c $CARD_NAME sset 'Playback' 95% &>/dev/null; then
        log_success "Playback unmuted (95%)"
    else
        log_warn "Playback control –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é"
    fi
    
    # 4. –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å capture level (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
    log_info "–®–∞–≥ 3/3: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è capture level..."
    if amixer -c $CARD_NAME sset 'Capture' 95% &>/dev/null; then
        log_success "Capture level: 95%"
    else
        log_warn "Capture control –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é"
    fi
    
    echo ""
    log_success "Noise cleanup –∑–∞–≤–µ—Ä—à–µ–Ω!"
    log_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω - –±–µ–ª—ã–π —à—É–º –¥–æ–ª–∂–µ–Ω —É–º–µ–Ω—å—à–∏—Ç—å—Å—è"
}

# Reset mixer –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
reset_mixer() {
    log_info "–°–±—Ä–æ—Å ALSA mixer –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å playback –∏ capture –≤ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    if amixer -c $CARD_NAME sset 'Playback' 95% &>/dev/null; then
        log_success "Playback: 95%"
    fi
    
    if amixer -c $CARD_NAME sset 'Capture' 95% &>/dev/null; then
        log_success "Capture: 95%"
    fi
    
    log_success "Reset –∑–∞–≤–µ—Ä—à–µ–Ω"
}

# Main —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "=============================================="
    echo "üîä ReSpeaker Noise Fix Utility"
    echo "=============================================="
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å ReSpeaker
    if ! check_respeaker; then
        exit 1
    fi
    
    echo ""
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    case "${1:-cleanup}" in
        status)
            show_status
            ;;
        cleanup)
            cleanup_noise
            ;;
        reset)
            reset_mixer
            ;;
        *)
            echo "Usage: $0 {cleanup|status|reset}"
            echo ""
            echo "Commands:"
            echo "  cleanup  - –í—ã–ø–æ–ª–Ω–∏—Ç—å noise cleanup (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
            echo "  status   - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ mixer"
            echo "  reset    - –°–±—Ä–æ—Å–∏—Ç—å mixer –∫ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º"
            exit 1
            ;;
    esac
    
    echo ""
    echo "=============================================="
}

# –ó–∞–ø—É—Å–∫
main "$@"
