# Dockerfile –¥–ª—è Voice Assistant System
# AI –≥–æ–ª–æ—Å–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π LED –∞–Ω–∏–º–∞—Ü–∏–π
#
# –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:
#   - rob_box_voice: –≥–æ–ª–æ—Å–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç (AudioNode, STTNode, TTSNode, DialogueNode, LEDNode, SoundNode)
#   - rob_box_animations: LED –º–∞—Ç—Ä–∏—á–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —ç–º–æ—Ü–∏–π –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
#
# Hardware:
#   - ReSpeaker Mic Array v2.0 (USB, 4 –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞, 12√ó RGB LED)
#   - Sound card WM8960 (3.5mm jack –¥–ª—è TTS output)
#   - NeoPixel LED –º–∞—Ç—Ä–∏—Ü—ã (—á–µ—Ä–µ–∑ led_matrix_compositor)

# –ë–ê–ó–û–í–´–ô –û–ë–†–ê–ó: voice-base —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –¥—Ä–∞–π–≤–µ—Ä—ã, –º–æ–¥–µ–ª–∏
ARG BASE_IMAGE=ghcr.io/krikz/rob_box_base:voice-base-humble-latest
FROM ${BASE_IMAGE}

ARG ROS_DISTRO=humble

# –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
LABEL org.opencontainers.image.title="Voice Assistant System for Vision Pi"
LABEL org.opencontainers.image.description="AI voice assistant with ReSpeaker and LED animations"
LABEL org.opencontainers.image.source="https://github.com/krikz/rob_box_project"

# ============================================================
# –°–ë–û–†–ö–ê –ù–ê–®–ò–• ROS2 –ü–ê–ö–ï–¢–û–í (rob_box_voice + rob_box_animations)
# ============================================================

# –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
WORKDIR /ws
RUN mkdir -p src/rob_box_voice src/rob_box_animations

# –®–∞–≥ 1: –ö–æ–ø–∏—Ä—É–µ–º package.xml –¥–ª—è rosdep (–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–Ω—è—é—Ç—Å—è —Ä–µ–¥–∫–æ)
COPY src/rob_box_voice/package.xml /ws/src/rob_box_voice/
COPY src/rob_box_animations/package.xml /ws/src/rob_box_animations/

# –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ROS –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ rosdep
# –≠—Ç–æ—Ç —Å–ª–æ–π –∫–µ—à–∏—Ä—É–µ—Ç—Å—è –ø–æ–∫–∞ package.xml –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è
RUN . /opt/ros/${ROS_DISTRO}/setup.sh && \
    . /ws_base/install/setup.sh && \
    rosdep update && \
    rosdep install --from-paths src/rob_box_voice src/rob_box_animations --ignore-src -r -y || true

# –®–∞–≥ 3: –ö–æ–ø–∏—Ä—É–µ–º setup.py –∏ CMakeLists.txt (—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–∫–µ—Ç–∞ –º–µ–Ω—è–µ—Ç—Å—è —Ä–µ–¥–∫–æ)

COPY src/rob_box_voice/setup.py /ws/src/rob_box_voice/
COPY src/rob_box_voice/setup.cfg /ws/src/rob_box_voice/
COPY src/rob_box_animations/CMakeLists.txt /ws/src/rob_box_animations/

# –®–∞–≥ 5: –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ —Ä–µ—Å—É—Ä—Å—ã
COPY src/rob_box_voice/resource /ws/src/rob_box_voice/resource
COPY sound_pack /ws/sound_pack

# –®–∞–≥ 6: –ö–æ–ø–∏—Ä—É–µ–º launch —Ñ–∞–π–ª—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
COPY src/rob_box_voice/launch /ws/src/rob_box_voice/launch
COPY src/rob_box_voice/config /ws/src/rob_box_voice/config
COPY src/rob_box_voice/prompts /ws/src/rob_box_voice/prompts
COPY src/rob_box_animations/launch /ws/src/rob_box_animations/launch

# –®–∞–≥ 8: –ö–æ–ø–∏—Ä—É–µ–º animations data
COPY src/rob_box_animations/animations /ws/src/rob_box_animations/animations

# –®–∞–≥ 7: –ö–æ–ø–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ Python (–º–µ–Ω—è–µ—Ç—Å—è —á–∞—â–µ –≤—Å–µ–≥–æ - –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–æ–π!)
COPY src/rob_box_voice/rob_box_voice /ws/src/rob_box_voice/rob_box_voice
COPY src/rob_box_animations/rob_box_animations /ws/src/rob_box_animations/rob_box_animations

# –®–∞–≥ 8: –ö–æ–ø–∏—Ä—É–µ–º scripts
COPY src/rob_box_voice/scripts /ws/src/rob_box_voice/scripts
COPY src/rob_box_animations/scripts /ws/src/rob_box_animations/scripts

# ============================================
# üöÄ –°–ë–û–†–ö–ê ROS2 –ü–ê–ö–ï–¢–û–í
# ============================================

# –°–æ–±–∏—Ä–∞–µ–º –Ω–∞—à–∏ –ø–∞–∫–µ—Ç—ã (audio_common_msgs —É–∂–µ —Å–æ–±—Ä–∞–Ω –≤ –±–∞–∑–æ–≤–æ–º –æ–±—Ä–∞–∑–µ)
RUN . /opt/ros/${ROS_DISTRO}/setup.sh && \
    . /ws_base/install/setup.sh && \
    colcon build \
    --packages-select rob_box_voice rob_box_animations \
    --symlink-install \
    --cmake-args \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

# Source workspace
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> /root/.bashrc && \
    echo "source /ws_base/install/setup.bash" >> /root/.bashrc && \
    echo "source /ws/install/setup.bash" >> /root/.bashrc

# ============================================================
# ENVIRONMENT VARIABLES
# ============================================================

# ROS2 –∏ Zenoh environment variables
ENV ROS_DOMAIN_ID=0
ENV RMW_IMPLEMENTATION=rmw_zenoh_cpp
ENV RUST_LOG=zenoh=info
ENV ROS_AUTOMATIC_DISCOVERY_RANGE=LOCALHOST
ENV ZENOH_CONFIG=/config/shared/zenoh_session_config.json5

# –ê—É–¥–∏–æ environment variables
ENV AUDIODEV=hw:ArrayUAC10,0
ENV ALSA_CARD=ArrayUAC10

# –ü—É—Ç–∏ –∫ –¥–∞–Ω–Ω—ã–º
ENV SOUND_PACK_DIR=/ws/sound_pack
ENV TTS_CACHE_DIR=/config/voice/tts_cache

# ============================================================
# HEALTHCHECK & ENTRYPOINT
# ============================================================

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –Ω–æ–¥
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD ros2 node list | grep -q "audio_node\|animation_player" || exit 1

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
ENTRYPOINT ["/bin/bash", "-c", "source /ws_base/install/setup.bash && source /ws/install/setup.bash && exec \"$@\"", "--"]

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ startup script
CMD ["/scripts/start_voice_assistant.sh"]
