#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Vision Pi (OAK-D –∫–∞–º–µ—Ä–∞)
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./update_and_restart.sh

set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "=========================================="
echo "Vision Pi - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo "=========================================="
echo ""

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_ROOT="$( cd "$SCRIPT_DIR/../.." && pwd )"

echo "üìÇ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_ROOT"
cd "$PROJECT_ROOT"
echo ""

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å —É–¥–∞–ª–µ–Ω–∏–µ–º —Å–∏—Ä–æ—Ç
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
cd docker/vision
docker-compose down --remove-orphans
echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
echo ""

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –∏–∑ GitHub
echo "üì• –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ GitHub..."
cd "$PROJECT_ROOT"
CURRENT_BRANCH=$(git branch --show-current)
echo "   –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $CURRENT_BRANCH"
git pull origin $CURRENT_BRANCH
echo "‚úÖ –ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω"
echo ""

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Docker —Ç–µ–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker —Ç–µ–≥–æ–≤..."
cd "$PROJECT_ROOT"
bash scripts/set-docker-tags.sh
echo ""

# –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã –∏–∑ registry
echo "üì¶ –°–∫–∞—á–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ Docker –æ–±—Ä–∞–∑—ã –∏–∑ registry..."
cd docker/vision
docker-compose pull
echo "‚úÖ –û–±—Ä–∞–∑—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
echo ""

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose up -d
echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps
echo ""

# –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
echo "‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏..."
sleep 5

# –ö–†–ò–¢–ò–ß–ù–û: –û—Ç–∫–ª—é—á–∞–µ–º lazy publisher
echo "üîß –û—Ç–∫–ª—é—á–∞–µ–º lazy publisher –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏..."
docker exec oak-d /ros_entrypoint.sh ros2 param set /camera/camera color.i_enable_lazy_publisher false 2>/dev/null || echo "  (color —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)"
docker exec oak-d /ros_entrypoint.sh ros2 param set /camera/camera depth.i_enable_lazy_publisher false 2>/dev/null || echo "  (depth —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)"
sleep 2

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
echo ""
echo "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ OAK-D –∫–∞–º–µ—Ä—ã:"
echo "=========================================="
docker logs --tail 30 oak-d
echo "=========================================="
echo ""

echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–ø–∏–∫–æ–≤:"
docker exec oak-d /ros_entrypoint.sh ros2 topic info /oak/rgb/image_raw/compressed 2>/dev/null | grep "Publisher count" || echo "–¢–æ–ø–∏–∫ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
echo ""

echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   docker logs -f oak-d          - —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ª–æ–≥–∞–º–∏"
echo "   docker-compose ps              - —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
echo "   docker-compose restart         - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å"
echo "   docker-compose down            - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
echo ""
