services:
  # Zenoh Router - локальный роутер для Vision Pi, подключается к Main Pi
  # Namespace НЕ используется здесь - он добавляется только на Main Pi при отправке в облако
  zenoh-router:
    image: eclipse/zenoh:latest
    container_name: zenoh-router-vision
    network_mode: host
    environment:
      - RUST_LOG=zenoh=info
    volumes:
      - ./config/zenoh_router_config.json5:/zenoh_config.json5
    command: -c /zenoh_config.json5
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/@/local/router || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 30s

  oak-d:
    image: ${SERVICE_IMAGE_PREFIX:-ghcr.io/krikz/rob_box}:oak-d-${ROS_DISTRO:-humble}-${IMAGE_TAG:-latest}
    container_name: oak-d
    network_mode: host
    privileged: true
    environment:
      - ROS_DOMAIN_ID=0
      - DISPLAY=:0
      - RMW_IMPLEMENTATION=rmw_zenoh_cpp
      - ZENOH_ROUTER_CHECK_ATTEMPTS=10  # Пытаемся подключиться к router 10 раз
      - RUST_LOG=zenoh=info  # Логирование Zenoh для отладки
      # Zenoh configuration через JSON - подключение к ЛОКАЛЬНОМУ роутеру Vision Pi
      - ROS_AUTOMATIC_DISCOVERY_RANGE=LOCALHOST
      - ZENOH_CONFIG=/config/shared/zenoh_session_config.json5
      - LD_LIBRARY_PATH=/opt/ros/humble/opt/zenoh_cpp_vendor/lib:/opt/ros/humble/lib/aarch64-linux-gnu:/opt/ros/humble/lib
    volumes:
      - ./config:/config/shared:ro
      - ./config/oak-d:/config/oak-d:ro
      - ./scripts/oak-d:/scripts:ro
      - ./oak-d/launch:/oak-d/launch:ro
      - /dev/bus/usb:/dev/bus/usb
      - /dev/shm:/dev/shm
    # AprilTag-only mode: OAK-D publishes only color image and camera_info for marker detection
    mem_limit: 6g  # Максимум 6GB (оставляем 2GB для системы)
    memswap_limit: 7g  # 6GB RAM + 1GB swap максимум
    command: ["/scripts/start_oak_d.sh"]
    depends_on:
      - zenoh-router
    restart: unless-stopped

  lslidar:
    image: ${SERVICE_IMAGE_PREFIX:-ghcr.io/krikz/rob_box}:lslidar-${ROS_DISTRO:-humble}-${IMAGE_TAG:-latest}
    container_name: lslidar
    network_mode: host
    privileged: true  # Для доступа к USB/Serial устройству
    devices:
      - /dev/ttyACM0:/dev/ttyACM0  # LSLIDAR N10 USB CDC ACM device
    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_zenoh_cpp
      - ZENOH_ROUTER_CHECK_ATTEMPTS=10
      - RUST_LOG=zenoh=info
      - ROS_AUTOMATIC_DISCOVERY_RANGE=LOCALHOST
      - ZENOH_CONFIG=/config/shared/zenoh_session_config.json5
    volumes:
      - ./config:/config/shared:ro
      - ./config/lslidar:/config/lslidar:ro
      - ./scripts/lslidar:/scripts:ro
      - /dev/shm:/dev/shm
    command: ["/scripts/start_lslidar.sh"]
    depends_on:
      - zenoh-router
    restart: unless-stopped

  apriltag:
    image: ${SERVICE_IMAGE_PREFIX:-ghcr.io/krikz/rob_box}:apriltag-${ROS_DISTRO:-humble}-${IMAGE_TAG:-latest}
    container_name: apriltag
    network_mode: host
    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_zenoh_cpp
      - ZENOH_ROUTER_CHECK_ATTEMPTS=10
      - RUST_LOG=zenoh=info
      # Zenoh configuration через JSON - подключение к ЛОКАЛЬНОМУ роутеру Vision Pi
      - ROS_AUTOMATIC_DISCOVERY_RANGE=LOCALHOST
      - ZENOH_CONFIG=/config/shared/zenoh_session_config.json5
    volumes:
      - ./config:/config/shared:ro
      - ./config/apriltag:/config/apriltag:ro
      - ./scripts/apriltag:/scripts:ro
      - /dev/shm:/dev/shm
    command: ["/scripts/start_apriltag.sh"]
    depends_on:
      - zenoh-router
      - oak-d
    restart: unless-stopped

  led-matrix:
    image: ${SERVICE_IMAGE_PREFIX:-ghcr.io/krikz/rob_box}:led-matrix-${ROS_DISTRO:-humble}-${IMAGE_TAG:-latest}
    container_name: led-matrix
    network_mode: host
    privileged: true  # Для доступа к SPI (/dev/spidev0.0)
    devices:
      - /dev/spidev0.0:/dev/spidev0.0  # SPI для NeoPixel LED
    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_zenoh_cpp
      - ZENOH_ROUTER_CHECK_ATTEMPTS=10
      - RUST_LOG=zenoh=info
      - ROS_AUTOMATIC_DISCOVERY_RANGE=LOCALHOST
      - ZENOH_CONFIG=/config/shared/zenoh_session_config.json5
    volumes:
      - ./config:/config/shared:ro
      - ./config/led_matrix:/config/led_matrix:ro
      - ./scripts/led_matrix:/scripts:ro
    command: ["/scripts/start_led_matrix.sh"]
    depends_on:
      - zenoh-router
    restart: unless-stopped

  voice-assistant:
    # Image tags automatically determined by IMAGE_TAG environment variable:
    # - IMAGE_TAG=latest  → voice-assistant-humble-latest (main branch)
    # - IMAGE_TAG=dev     → voice-assistant-humble-dev (develop branch)
    # - IMAGE_TAG=test    → voice-assistant-humble-test (feature/* branches)
    # Built via GitHub Actions: .github/workflows/build-vision-services.yml
    image: ${SERVICE_IMAGE_PREFIX:-ghcr.io/krikz/rob_box}:voice-assistant-${ROS_DISTRO:-humble}-${IMAGE_TAG:-latest}
    container_name: voice-assistant
    network_mode: host
    privileged: true  # Для доступа к USB audio и ReSpeaker
    devices:
      - /dev/snd:/dev/snd  # ALSA audio devices
      - /dev/bus/usb:/dev/bus/usb  # USB для ReSpeaker
    environment:
      - ROS_DOMAIN_ID=0
      - ROS_DISTRO=humble  # Для source /opt/ros/$ROS_DISTRO/setup.bash
      - RMW_IMPLEMENTATION=rmw_zenoh_cpp
      - ZENOH_ROUTER_CHECK_ATTEMPTS=10
      - RUST_LOG=zenoh=info
      - ROS_AUTOMATIC_DISCOVERY_RANGE=LOCALHOST
      - ZENOH_CONFIG=/config/shared/zenoh_session_config.json5
      # Audio settings
      - ALSA_CARD=ReSpeaker
      - TTS_CACHE_DIR=/cache/tts
      # Python для audio
      - PYTHONUNBUFFERED=1
    env_file:
      - .env.secrets  # API keys: DEEPSEEK_API_KEY, YANDEX_API_KEY, YANDEX_FOLDER_ID
    volumes:
      - ./config:/config/shared:ro
      - ./config/voice:/config/voice:ro
      - ./scripts:/scripts:ro
      - /dev/shm:/dev/shm
      # Кэш для TTS (persistent)
      - ./cache/tts:/cache/tts
      # Sound pack
      - ../../sound_pack:/ws/sound_pack:ro
    mem_limit: 2g  # Voice Assistant + Animations
    memswap_limit: 2.5g
    command: ["/scripts/start_voice_assistant.sh"]
    depends_on:
      - zenoh-router
    restart: unless-stopped

  # Internal Dialogue Agent - система внутреннего диалога робота
  perception:
    # Image tag automatically determined by IMAGE_TAG environment variable
    image: ${SERVICE_IMAGE_PREFIX:-ghcr.io/krikz/rob_box}:perception-${ROS_DISTRO:-humble}-${IMAGE_TAG:-latest}
    container_name: perception
    network_mode: host
    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_zenoh_cpp
      - ZENOH_ROUTER_CHECK_ATTEMPTS=10
      - RUST_LOG=zenoh=info
      - ROS_AUTOMATIC_DISCOVERY_RANGE=LOCALHOST
      - ZENOH_CONFIG=/config/shared/zenoh_session_config.json5
      # Reflection parameters (v2.0 Event-Driven)
      - DIALOGUE_TIMEOUT=10.0  # секунды - тайм-аут диалога
      - URGENT_RESPONSE_TIMEOUT=2.0  # секунды - тайм-аут срочного ответа
      - ENABLE_SPEECH=true  # Включить речь робота
      # Context Aggregator parameters
      - CONTEXT_PUBLISH_RATE=2.0  # Hz - частота событий
      - MEMORY_WINDOW=60  # секунды - окно короткой памяти
      # Python
      - PYTHONUNBUFFERED=1
    env_file:
      - .env.secrets  # API keys: DEEPSEEK_API_KEY
    volumes:
      - ./config:/config/shared:ro
      - ./perception/scripts:/scripts:ro
      - /dev/shm:/dev/shm
    mem_limit: 512m  # Perception - лёгкий контейнер
    memswap_limit: 768m
    command: ["/scripts/start_perception.sh"]
    depends_on:
      - zenoh-router
      - voice-assistant  # Зависим от voice для TTS
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'source /ws/install/setup.bash && ros2 node list | grep -q reflection_node'"]
      interval: 15s
      timeout: 5s
      start_period: 20s
      retries: 3
