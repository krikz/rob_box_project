# vesc_nexus_config.yaml - Конфигурация VESC Nexus драйвера
# 
# Управление 4× VESC моторами через CAN интерфейс
# Rob Box Project - Main Pi

/**:
  ros__parameters:
    # ═══════════════════════════════════════════════════════════════
    # CAN Interface Configuration
    # ═══════════════════════════════════════════════════════════════
    can_interface: "can0"           # CAN интерфейс (can0, can1, ...)
    can_baudrate: 500000            # 500 kbit/s - стандартный для VESC
    
    # ═══════════════════════════════════════════════════════════════
    # VESC Configuration
    # ═══════════════════════════════════════════════════════════════
    # CAN ID каждого VESC (установлены через VESC Tool)
    vesc_ids: [49, 124, 81, 94]     # [FL, FR, RL, RR]
    
    # Метки колес для топиков и TF
    wheel_labels: [
      "front_left",
      "front_right", 
      "rear_left",
      "rear_right"
    ]
    
    # ═══════════════════════════════════════════════════════════════
    # Wheel Parameters
    # ═══════════════════════════════════════════════════════════════
    # Радиус колес в метрах (10" = 254mm диаметр → ~0.127m радиус)
    wheel_radii: [0.115, 0.115, 0.115, 0.115]
    
    # Количество полюсов мотора (магнитных пар × 2)
    # Например: для 6384 мотора обычно 14 полюсов (7 пар магнитов)
    wheel_poles: [30, 30, 30, 30]
    
    # Минимальный ERPM для начала движения
    # Используется для фильтрации шумов при стоянке
    wheel_abs_min_erpm: [900, 900, 900, 900]
    
    # ═══════════════════════════════════════════════════════════════
    # Robot Geometry
    # ═══════════════════════════════════════════════════════════════
    # Расстояние между осями (wheelbase) в метрах
    wheel_base: 0.35                # Примерное значение, уточнить!
    
    # Ширина колеи (track width) в метрах
    track_width: 0.40               # Примерное значение, уточнить!
    
    # ═══════════════════════════════════════════════════════════════
    # Control Limits
    # ═══════════════════════════════════════════════════════════════
    # Максимальная/минимальная скорость (RPM)
    speed_max: 23250.0              # ~100 km/h эквивалент (уточнить!)
    speed_min: -23250.0
    
    # Максимальный ток (Ампер)
    current_max: 15.0               # Максимальный ток мотора
    
    # Тормозной ток
    brake_max: 200000.0
    brake_min: -20000.0
    
    # Servo limits (если используется)
    servo_min: 0.15
    servo_max: 0.85
    
    # ═══════════════════════════════════════════════════════════════
    # Publishing Configuration
    # ═══════════════════════════════════════════════════════════════
    # Частота публикации состояния моторов и одометрии
    publish_rate: 50.0              # Hz
    
    # ═══════════════════════════════════════════════════════════════
    # Topics Configuration
    # ═══════════════════════════════════════════════════════════════
    # Входящие команды
    cmd_vel_topic: "/cmd_vel"
    
    # Исходящие топики
    odom_topic: "/odom"
    odom_frame_id: "odom"
    base_frame_id: "base_link"
    
    # Топики состояния моторов
    motor_state_topic_prefix: "/sensors/motor_state/"
    
    # ═══════════════════════════════════════════════════════════════
    # Advanced Settings
    # ═══════════════════════════════════════════════════════════════
    # Публикация TF трансформации odom → base_link
    publish_tf: true
    
    # Режим управления моторами (rpm, current, duty, position)
    control_mode: "rpm"
    
    # Таймаут команд (секунды) - остановка при отсутствии cmd_vel
    cmd_timeout: 0.5
    
    # Диагностика
    enable_diagnostics: true
    diagnostic_period: 1.0          # Период публикации диагностики (сек)

# ═══════════════════════════════════════════════════════════════════
# NOTES
# ═══════════════════════════════════════════════════════════════════
# 
# 1. CAN ID Configuration:
#    - Установите уникальные CAN ID для каждого VESC через VESC Tool
#    - Диапазон: 1-254
#    - Текущие ID: FL=49, FR=124, RL=81, RR=94
#
# 2. Wheel Configuration:
#    - wheel_radii: Измерьте реальный радиус колес
#    - wheel_poles: Проверьте количество полюсов мотора в спецификации
#
# 3. Geometry:
#    - wheel_base: Расстояние между передней и задней осью
#    - track_width: Расстояние между левым и правым колесом
#
# 4. Limits:
#    - Установите limits согласно характеристикам VESC и моторов
#    - Не превышайте максимальные токи, указанные производителем
#
# 5. Testing:
#    - Начните с малых значений speed_max и current_max
#    - Постепенно увеличивайте после тестирования
