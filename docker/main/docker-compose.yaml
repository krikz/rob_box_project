version: '3.8'

# Использует переменные из .env файла:
# - ROS_DISTRO: версия ROS 2 (humble, jazzy, и т.д.)
# - IMAGE_TAG: тег ветки (latest, dev, rc-X.Y.Z)
# - BASE_IMAGE_PREFIX: ghcr.io/krikz/rob_box_base
# - SERVICE_IMAGE_PREFIX: ghcr.io/krikz/rob_box

services:
  # Zenoh Router - центральный роутер для связи между Pi
  zenoh-router:
    image: eclipse/zenoh:latest
    container_name: zenoh-router
    network_mode: host
    environment:
      - RUST_LOG=zenoh=info
    volumes:
      - ./config/zenoh_router_config.json5:/zenoh_config.json5
    command: -c /zenoh_config.json5
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/@/local/router || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 30s

  # Robot State Publisher - публикует TF дерево робота из URDF
  robot-state-publisher:
    build:
      context: ./robot_state_publisher
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: ${BASE_IMAGE_PREFIX:-ghcr.io/krikz/rob_box_base}:ros2-zenoh-${ROS_DISTRO:-humble}-${IMAGE_TAG:-latest}
    image: ${SERVICE_IMAGE_PREFIX:-ghcr.io/krikz/rob_box}:robot-state-publisher-${ROS_DISTRO:-humble}-${IMAGE_TAG:-latest}
    container_name: robot-state-publisher
    network_mode: host
    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_zenoh_cpp
      - RUST_LOG=zenoh=info
      - ROS_AUTOMATIC_DISCOVERY_RANGE=LOCALHOST
      - ZENOH_CONFIG=/config/zenoh_session_config.json5
      - LD_LIBRARY_PATH=/opt/ros/humble/opt/zenoh_cpp_vendor/lib:/opt/ros/humble/lib/aarch64-linux-gnu:/opt/ros/humble/lib
    volumes:
      - ../../src:/workspace/src:ro  # Read-only доступ к исходникам URDF
      - ./config:/config
    depends_on:
      - zenoh-router
    restart: unless-stopped
    
  rtabmap:
    build: 
      context: ./rtabmap
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: ${BASE_IMAGE_PREFIX:-ghcr.io/krikz/rob_box_base}:rtabmap-${ROS_DISTRO:-humble}-${IMAGE_TAG:-latest}
    image: ${SERVICE_IMAGE_PREFIX:-ghcr.io/krikz/rob_box}:rtabmap-${ROS_DISTRO:-humble}-${IMAGE_TAG:-latest}
    container_name: rtabmap
    network_mode: host
    environment:
      - ROS_DOMAIN_ID=0
      - QT_QPA_PLATFORM=offscreen
      - RMW_IMPLEMENTATION=rmw_zenoh_cpp
      - ZENOH_ROUTER_CHECK_ATTEMPTS=10  # Подключаемся к локальному router
      - RUST_LOG=zenoh=info
      # Zenoh configuration через JSON
      - ROS_AUTOMATIC_DISCOVERY_RANGE=LOCALHOST
      - ZENOH_CONFIG=/config/zenoh_session_config.json5
      # КРИТИЧНО: Путь к библиотекам Zenoh (vendor устанавливает в нестандартный путь)
      - LD_LIBRARY_PATH=/opt/ros/${ROS_DISTRO:-humble}/opt/zenoh_cpp_vendor/lib:/opt/ros/${ROS_DISTRO:-humble}/lib/aarch64-linux-gnu:/opt/ros/${ROS_DISTRO:-humble}/lib
      # Переменные для сжатия изображений
      - COMPRESSED_IMAGE_TRANSPORT_JPEG_QUALITY=80
      - COMPRESSED_DEPTH_IMAGE_TRANSPORT_PNG_LEVEL=3
    volumes:
      - ./config:/config
      - ./maps:/maps
    # Оптимизированная команда - прямое использование сжатых топиков от OAK-D + LiDAR
    command: >
      ros2 launch rtabmap_launch rtabmap.launch.py
      params:=/config/rtabmap.yaml
      frame_id:=base_link
      odom_frame_id:=odom
      use_sim_time:=false
      qos:=1
      approx_sync:=true
      approx_sync_max_interval:=0.1
      subscribe_rgbd:=false
      subscribe_rgb:=true
      subscribe_depth:=true
      subscribe_scan:=true
      subscribe_stereo:=false
      rgbd_sync:=true
      rgb_topic:=/camera/camera/color/image_rect
      depth_topic:=/camera/camera/depth/image_rect_raw
      camera_info_topic:=/camera/camera/color/camera_info
      scan_topic:=/scan
      rtabmap_viz:=false
      rviz:=false
      visual_odometry:=true
      icp_odometry:=false
      odom_topic:=odom
      wait_for_transform:=0.5
      database_path:=/maps/rtabmap.db
    depends_on:
      - zenoh-router
    restart: unless-stopped