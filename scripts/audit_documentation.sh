#!/bin/bash
# –ê—É–¥–∏—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç naming conventions –∏ –¥—É–±–ª–∏–∫–∞—Ç—ã

echo "üîç –ê—É–¥–∏—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Rob Box Project"
echo "======================================"
echo ""

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ lowercase —Ñ–∞–π–ª–æ–≤ –≤ docs/
echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ lowercase —Ñ–∞–π–ª–æ–≤ –≤ docs/:"
lowercase_files=$(find docs -name "*.md" -type f | grep -v "^docs/README.md$" | grep -E '[a-z]' | grep -v '[A-Z_]')
if [ -z "$lowercase_files" ]; then
    echo "   ‚úÖ –ù–µ—Ç lowercase —Ñ–∞–π–ª–æ–≤"
else
    echo "   ‚ùå –ù–∞–π–¥–µ–Ω—ã lowercase —Ñ–∞–π–ª—ã:"
    echo "$lowercase_files" | sed 's/^/      /'
fi
echo ""

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ MD —Ñ–∞–π–ª–æ–≤ –≤–Ω–µ docs/ (–∫—Ä–æ–º–µ –∫–æ—Ä–Ω—è)
echo "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ MD —Ñ–∞–π–ª–æ–≤ –≤–Ω–µ docs/:"
outside_docs=$(find . -maxdepth 3 -name "*.md" -type f \
    ! -path "./docs/*" \
    ! -path "./README.md" \
    ! -path "./CONTRIBUTING.md" \
    ! -path "./QUICK_REFERENCE.md" \
    ! -path "./src/*/README.md" \
    ! -path "./host/*/README.md" \
    ! -path "./archive/*" \
    ! -path "./.git/*")
if [ -z "$outside_docs" ]; then
    echo "   ‚úÖ –í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ docs/"
else
    echo "   ‚ö†Ô∏è  –§–∞–π–ª—ã –≤–Ω–µ docs/:"
    echo "$outside_docs" | sed 's/^/      /'
fi
echo ""

# 3. –ü–æ–∏—Å–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ –∏–º–µ–Ω–∏
echo "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ –∏–º–µ–Ω–∏:"
duplicates_found=false
cd docs
for file in $(find . -name "*.md" -type f | sed 's|^\./||'); do
    basename=$(basename "$file" .md)
    # –ò—â–µ–º —Ñ–∞–π–ª—ã —Å –ø–æ—Ö–æ–∂–∏–º –∏–º–µ–Ω–µ–º (–∏–≥–Ω–æ—Ä–∏—Ä—É—è –¥–∞—Ç—É)
    base_pattern=$(echo "$basename" | sed 's/_[0-9-]*$//')
    similar=$(find . -name "${base_pattern}*.md" -type f | wc -l)
    if [ $similar -gt 1 ]; then
        echo "   ‚ö†Ô∏è  –ü–æ—Ö–æ–∂–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è $base_pattern:"
        find . -name "${base_pattern}*.md" -type f | sed 's|^\./|      docs/|'
        duplicates_found=true
    fi
done
cd ..
if [ "$duplicates_found" = false ]; then
    echo "   ‚úÖ –î—É–±–ª–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi
echo ""

# 4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
echo "4Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:"
echo "   üìÅ getting-started: $(find docs/getting-started -name "*.md" 2>/dev/null | wc -l) —Ñ–∞–π–ª–æ–≤"
echo "   üìÅ guides:          $(find docs/guides -name "*.md" 2>/dev/null | wc -l) —Ñ–∞–π–ª–æ–≤"
echo "   üìÅ reference:       $(find docs/reference -name "*.md" 2>/dev/null | wc -l) —Ñ–∞–π–ª–æ–≤"
echo "   üìÅ development:     $(find docs/development -name "*.md" 2>/dev/null | wc -l) —Ñ–∞–π–ª–æ–≤"
echo "   üìÑ –í—Å–µ–≥–æ –≤ docs:    $(find docs -name "*.md" 2>/dev/null | wc -l) —Ñ–∞–π–ª–æ–≤"
echo ""

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏—Ç—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ã
echo "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫ (sample):"
broken_links=0
for file in $(find docs -name "*.md" -type f | head -10); do
    # –ò—â–µ–º markdown —Å—Å—ã–ª–∫–∏ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ .md —Ñ–∞–π–ª—ã
    grep -oE '\[.*\]\([^)]*\.md\)' "$file" 2>/dev/null | while read -r link; do
        target=$(echo "$link" | sed -E 's/.*\(([^)]*\.md)\).*/\1/')
        dir=$(dirname "$file")
        full_path="$dir/$target"
        if [ ! -f "$full_path" ]; then
            echo "   ‚ö†Ô∏è  –ë–∏—Ç–∞—è —Å—Å—ã–ª–∫–∞: $file -> $target"
            broken_links=$((broken_links + 1))
        fi
    done
done
if [ $broken_links -eq 0 ]; then
    echo "   ‚úÖ –°—Å—ã–ª–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã (sample check)"
fi
echo ""

echo "======================================"
echo "‚úÖ –ê—É–¥–∏—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"
